version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
    commands:
      - echo "Installing dependencies"
      - pip install -r requirements.txt
  
  pre_build:
    commands:
      - docker-compose up -d
      - sleep 10
      - echo "Running tests"
      - python -m unittest test_app.py
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 495599755529.dkr.ecr.us-east-1.amazonaws.com
      - echo "Verifying ECR repositories..."
      - aws ecr describe-repositories --region us-east-1 || { echo "Failed to describe ECR repositories"; exit 1; }
      - docker-compose down
  
  build:
    commands:
      - echo "Build started on `date`"
      - echo "Building the Docker image..."
      - docker build -t flask_app .
      - docker tag flask_app:latest 495599755529.dkr.ecr.us-east-1.amazonaws.com/flask_app:latest
  
  post_build:
    commands:
      - echo "Build completed on `date`"
      - echo "Pushing the Docker image..."
      - docker push 495599755529.dkr.ecr.us-east-1.amazonaws.com/flask_app:latest
      - echo "Writing image definitions file..."
      - printf ‘[{“name”:“container-app-flask”,“imageUri”:“495599755529.dkr.ecr.us-east-1.amazonaws.com/flask_app:latest”}]’ > imagedefinitions.json
      - printf ‘{“ImageURI”:“495599755529.dkr.ecr.us-east-1.amazonaws.com/flask_app:latest”}’ > imageDetail.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - imageDetail.json
    - appspec.json
    - taskdef.json
  secondary-artifacts:
    DefinitionArtifact:
      files:
        - appspec.json
        - taskdef.json
    ImageArtifact:
      files:
        - imageDetail.json